// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"client/generated/models"
)

// GetUserByIDReader is a Reader for the GetUserByID structure.
type GetUserByIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetUserByIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetUserByIDOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 404:
		result := NewGetUserByIDNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetUserByIDInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /users/{id}] GetUserById", response, response.Code())
	}
}

// NewGetUserByIDOK creates a GetUserByIDOK with default headers values
func NewGetUserByIDOK() *GetUserByIDOK {
	return &GetUserByIDOK{}
}

/*
GetUserByIDOK describes a response with status code 200, with default header values.

OK
*/
type GetUserByIDOK struct {
	Payload *models.GetUserByIDResponse
}

// IsSuccess returns true when this get user by Id o k response has a 2xx status code
func (o *GetUserByIDOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get user by Id o k response has a 3xx status code
func (o *GetUserByIDOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get user by Id o k response has a 4xx status code
func (o *GetUserByIDOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get user by Id o k response has a 5xx status code
func (o *GetUserByIDOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get user by Id o k response a status code equal to that given
func (o *GetUserByIDOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get user by Id o k response
func (o *GetUserByIDOK) Code() int {
	return 200
}

func (o *GetUserByIDOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /users/{id}][%d] getUserByIdOK %s", 200, payload)
}

func (o *GetUserByIDOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /users/{id}][%d] getUserByIdOK %s", 200, payload)
}

func (o *GetUserByIDOK) GetPayload() *models.GetUserByIDResponse {
	return o.Payload
}

func (o *GetUserByIDOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GetUserByIDResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetUserByIDNotFound creates a GetUserByIDNotFound with default headers values
func NewGetUserByIDNotFound() *GetUserByIDNotFound {
	return &GetUserByIDNotFound{}
}

/*
GetUserByIDNotFound describes a response with status code 404, with default header values.

Not Found
*/
type GetUserByIDNotFound struct {
	Payload *models.ErrorResponse
}

// IsSuccess returns true when this get user by Id not found response has a 2xx status code
func (o *GetUserByIDNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get user by Id not found response has a 3xx status code
func (o *GetUserByIDNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get user by Id not found response has a 4xx status code
func (o *GetUserByIDNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get user by Id not found response has a 5xx status code
func (o *GetUserByIDNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get user by Id not found response a status code equal to that given
func (o *GetUserByIDNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get user by Id not found response
func (o *GetUserByIDNotFound) Code() int {
	return 404
}

func (o *GetUserByIDNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /users/{id}][%d] getUserByIdNotFound %s", 404, payload)
}

func (o *GetUserByIDNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /users/{id}][%d] getUserByIdNotFound %s", 404, payload)
}

func (o *GetUserByIDNotFound) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *GetUserByIDNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetUserByIDInternalServerError creates a GetUserByIDInternalServerError with default headers values
func NewGetUserByIDInternalServerError() *GetUserByIDInternalServerError {
	return &GetUserByIDInternalServerError{}
}

/*
GetUserByIDInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type GetUserByIDInternalServerError struct {
	Payload *models.ErrorResponse
}

// IsSuccess returns true when this get user by Id internal server error response has a 2xx status code
func (o *GetUserByIDInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get user by Id internal server error response has a 3xx status code
func (o *GetUserByIDInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get user by Id internal server error response has a 4xx status code
func (o *GetUserByIDInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get user by Id internal server error response has a 5xx status code
func (o *GetUserByIDInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get user by Id internal server error response a status code equal to that given
func (o *GetUserByIDInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the get user by Id internal server error response
func (o *GetUserByIDInternalServerError) Code() int {
	return 500
}

func (o *GetUserByIDInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /users/{id}][%d] getUserByIdInternalServerError %s", 500, payload)
}

func (o *GetUserByIDInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /users/{id}][%d] getUserByIdInternalServerError %s", 500, payload)
}

func (o *GetUserByIDInternalServerError) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *GetUserByIDInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
